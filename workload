SELECT  query_id
       ,to_timestamp(start_time,'yyyy-MM-dd HH:mm:ss')                          AS '开始时间'
       ,to_timestamp(end_time,'yyyy-MM-dd HH:mm:ss')                            AS '结束时间'
       ,round(duration/1000,0)                                                  AS '总耗时(s)'
       ,total_cpu_time AS CPU耗时ms
       ,round((duration-admission_wait)/1000,0)                                 AS '运行时长(s)'
       ,round(admission_wait/1000,0)                                            AS '排队时长(s)'
       ,cast(round(per_node_peak_memory/ 1024 / 1024 / 1024) AS string)         AS '内存(GB)'
       ,cast(round(estimated_per_node_peak_memory/ 1024 / 1024/1024) AS string) AS '预估内存(GB)'
       ,query_state                                                             AS '查询状态'
       ,functional_module                                                       AS '类型'
       ,workload_source                                                         AS '来源'
       ,workload_query_desc                                                     AS '详细信息'  
       ---,sql
FROM default.workload_query
WHERE sql like "%ustomerid FROM horizon_production_2.events%"
order by per_node_peak_memory desc limit 10;

SELECT  query_id
       ,to_timestamp(start_time,'yyyy-MM-dd HH:mm:ss')                          AS '开始时间'
       ,to_timestamp(end_time,'yyyy-MM-dd HH:mm:ss')                            AS '结束时间'
       ,round(duration/1000,0)                                                  AS '总耗时(s)'
       ,total_cpu_time AS CPU耗时ms
       ,round((duration-admission_wait)/1000,0)                                 AS '运行时长(s)'
       ,round(admission_wait/1000,0)                                            AS '排队时长(s)'
       ,cast(round(per_node_peak_memory/ 1024 / 1024 / 1024) AS string)         AS '内存(GB)'
       ,cast(round(estimated_per_node_peak_memory/ 1024 / 1024/1024) AS string) AS '预估内存(GB)'
       ,query_state                                                             AS '查询状态'
       ,functional_module                                                       AS '类型'
       ,workload_source                                                         AS '来源'
       ,workload_query_desc                                                     AS '详细信息'  
       ---,sql
FROM workload_query
WHERE sql like "%ustomerid FROM horizon_production_2.events%"
order by per_node_peak_memory desc limit 10;

user

SELECT  query_id
       ,to_timestamp(start_time,'yyyy-MM-dd HH:mm:ss')                          AS '开始时间'
       ,to_timestamp(end_time,'yyyy-MM-dd HH:mm:ss')                            AS '结束时间'
       ,round(duration/1000,0)                                                  AS '总耗时(s)'
       ,total_cpu_time AS CPU耗时ms
       ,round((duration-admission_wait)/1000,0)                                 AS '运行时长(s)'
       ,round(admission_wait/1000,0)                                            AS '排队时长(s)'
       ,cast(round(per_node_peak_memory/ 1024 / 1024 / 1024) AS string)         AS '内存(GB)'
       ,cast(round(estimated_per_node_peak_memory/ 1024 / 1024/1024) AS string) AS '预估内存(GB)'
       ,query_state                                                             AS '查询状态'
       ,functional_module                                                       AS '类型'
       ,workload_source                                                         AS '来源'
       ,workload_query_desc                                                     AS '详细信息'  
       ,user
       ,sub_category
FROM workload_query
WHERE user like '%admin%'
and start_time between '2025-04-11 00:00:00' AND '2025-04-11 23:10:00'
order by per_node_peak_memory desc limit 10;



for i in hybrid0{1..3};do echo $i && ssh $i cat /sensorsdata/main/logs/sp/nginx/web.access.log.20250208  | grep '/api/sql/query' | wc -l; done


 SELECT  query_id
       ,to_timestamp(start_time,'yyyy-MM-dd HH:mm:ss')                          AS '开始时间'
       ,to_timestamp(end_time,'yyyy-MM-dd HH:mm:ss')                            AS '结束时间'
       ,round(duration/1000,0)                                                  AS '总耗时(s)'
       ,total_cpu_time AS CPU耗时ms
       ,round((duration-admission_wait)/1000,0)                                 AS '运行时长(s)'
       ,round(admission_wait/1000,0)                                            AS '排队时长(s)'
       ,cast(round(per_node_peak_memory/ 1024 / 1024 / 1024) AS string)         AS '内存(GB)'
       ,cast(round(estimated_per_node_peak_memory/ 1024 / 1024/1024) AS string) AS '预估内存(GB)'
       ,query_state                                                             AS '查询状态'
       ,functional_module                                                       AS '类型'
       ,workload_source                                                         AS '来源'
       ,workload_query_desc                                                     AS '详细信息'
       ,entity_id                                                               AS 'id'
       --- ,sql
FROM default.workload_query
WHERE start_time between '2025-04-01 12:40:00' AND '2025-04-01 13:00:00'  AND per_node_peak_memory is not null
order by total_cpu_time desc limit 10;



select * from workload_query where query_id = '5e4eca13175d98f2:45fb153d00000000';SELECT  query_id
       ,to_timestamp(start_time,'yyyy-MM-dd HH:mm:ss')                          AS '开始时间'
       ,to_timestamp(end_time,'yyyy-MM-dd HH:mm:ss')                            AS '结束时间'
       ,cast(round(per_node_peak_memory/ 1024 / 1024 / 1024) AS string)         AS '内存(GB)'
       ,functional_module                                                       AS '类型'
       ,workload_source                                                         AS '来源'
       ,workload_query_desc                                                     AS '详细信息'
       ,entity_id                                                               AS 'id'
       ,user
FROM default.workload_query                                                                                   
WHERE start_time between '2025-03-25 03:00:00' AND '2025-03-25 04:00:00'  AND per_node_peak_memory is not null AND functional_module like "%数据概览缓存刷新%"
order by per_node_peak_memory desc;


impala-shell -B --output_delimiter='\t' --print_header -f /tmp/sql -o /tmp/result



 SELECT  query_id
       ,to_timestamp(start_time,'yyyy-MM-dd HH:mm:ss')                          AS '开始时间'
       ,to_timestamp(end_time,'yyyy-MM-dd HH:mm:ss')                            AS '结束时间'
       ,round(duration/1000,0)                                                  AS '总耗时(s)'
       ,total_cpu_time AS CPU耗时ms
       ,round((duration-admission_wait)/1000,0)                                 AS '运行时长(s)'
       ,round(admission_wait/1000,0)                                            AS '排队时长(s)'
       ,cast(round(per_node_peak_memory/ 1024 / 1024 / 1024) AS string)         AS '内存(GB)'
       ,cast(round(estimated_per_node_peak_memory/ 1024 / 1024/1024) AS string) AS '预估内存(GB)'
       ,query_state                                                             AS '查询状态'
       ,functional_module                                                       AS '类型'
       ,workload_source                                                         AS '来源'
       ,workload_query_desc                                                     AS '详细信息'
       --- ,sql
FROM default.workload_query
WHERE start_time between '2025-02-08 09:00:00' AND '2025-02-08 10:10:00' and functional_module = '自定义接口查询' and sql like '% from users%'
order by per_node_peak_memory desc;

41460a205d522351:f97ca0dd00000000

SELECT  query_id
       ,to_timestamp(start_time,'yyyy-MM-dd HH:mm:ss')                          AS '开始时间'
       ,to_timestamp(end_time,'yyyy-MM-dd HH:mm:ss')                            AS '结束时间'
       ,round(duration/1000,0)                                                  AS '总耗时(s)'
       ,total_cpu_time AS CPU耗时ms
       ,round((duration-admission_wait)/1000,0)                                 AS '运行时长(s)'
       ,round(admission_wait/1000,0)                                            AS '排队时长(s)'
       ,cast(round(per_node_peak_memory/ 1024 / 1024 / 1024) AS string)         AS '内存(GB)'
       ,cast(round(estimated_per_node_peak_memory/ 1024 / 1024/1024) AS string) AS '预估内存(GB)'
       ,query_state                                                             AS '查询状态'
       ,functional_module                                                       AS '类型'
       ,workload_source                                                         AS '来源'
       ,workload_query_desc                                                     AS '详细信息'  
       ---,sql
FROM default.workload_query
WHERE query_id='41460a205d522351:f97ca0dd00000000'
order by per_node_peak_memory desc limit 10;




SELECT  query_id
       ,to_timestamp(start_time,'yyyy-MM-dd HH:mm:ss')                          AS '开始时间'
       ,to_timestamp(end_time,'yyyy-MM-dd HH:mm:ss')                            AS '结束时间'
       ,round(duration/1000,0)                                                  AS '总耗时(s)'
       ,total_cpu_time AS CPU耗时ms
       ,round((duration-admission_wait)/1000,0)                                 AS '运行时长(s)'
       ,round(admission_wait/1000,0)                                            AS '排队时长(s)'
       ,cast(round(per_node_peak_memory/ 1024 / 1024 / 1024) AS string)         AS '内存(GB)'
       ,cast(round(estimated_per_node_peak_memory/ 1024 / 1024/1024) AS string) AS '预估内存(GB)'
       ,query_state                                                             AS '查询状态'
       ,functional_module                                                       AS '类型'
       ,workload_source                                                         AS '来源'
       ,workload_query_desc                                                     AS '详细信息'  
       ---,sql
FROM default.workload_query
WHERE start_time between '2025-03-20 00:00:00' AND '2025-03-28 10:10:00'
AND functional_module like '%概览%' and query_state='EXCEPTION'
order by per_node_peak_memory desc limit 10;